<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!--
		log4j
		프로그램 작동시 로그를 남기기 위한 자바기반 오픈소스 로깅 라이브러리
		로그의 레벨을 지정하여 지정한 레벨 이상의 로그정보만 기록하는 방식
		System.out.pringln문보다 속도나 성능면에 최적화되어 있음
	-->

	<!-- Appenders --> <!-- 로그로 받아온 데이터를 어디에 append 시키는지 -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<!--
			ConsoleAppender : 콘솔창에 에러메세지 출력
			FileAppender : 파일에 출력
		-->
		<param name="threshold" value="INFO"/>
		<!--
			로그 레벨 설정
			FATAL > ERROR > WARN > INFO > DEBUGGER > TRACE
			FATAL : 애플리케이션이 동작이 불가능할정도의 에러 발생시 로그를 찍어줌
			ERROR : 요청처리중 에러발생시 로그를 찍어줌
			WARN : 심각한 문제는 아니지만 추후 에러발생 가능성을 알려주는 로그
			INFO : 일반 정보성 메세지를 나타냄
			DEBUGGER : 개발시 디버그 용도로 로그를 찍어줌
			TRACE : 1.2.12 에서 추가됨. DEBUGGER 에서 좀 더 상세하게 표현하게끔 바뀜

			개발할떄는 DEBUGGER OR TRACE로 테스트해보다가 운영환경으로 넘어가면 INFO모드로 바꿔서 사용해야함
		-->
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{HH:mm:ss.SSS}] %-5p %C{1}.%M(%F:%L) - %m%n" />
			<!--
				패턴은 외울 필요 없음
				%p : 우선순위 레벨 , %c : 호출 클래스명{1} ({해당클래스의 레벨} 2: ex)controller-BoardController 뒤에서부터 높은 레벨)
				%m은 메서드 #F 로그발생한 파일명 출력 라인수
			-->
		</layout>
	</appender>
	
	<!--
		DailRollingFileAppender ?
			일정기간 단위로 로그파일을 생성하고 기록하도록 도와주는 클래스.
	-->
	<appender name="dailyLog" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="threshold" value="info"/>
		<!-- logger안에 appender ref 로 dailyLog 객체를 사용시 level 정보가 없다면 threshold 에 설정한 정보를 사용-->
		<param name="Append" value="true"/>
		<!-- 파일 이어쓰기 여부 true 이어씀. false 새로 생성 -->
		<param name="File" value="/Users/yeomseohak/Desktop/spring/SpringProject2/SpringProject/logs/dailyLog.log"/>
		<!-- 폴더에 접근권한 없는 경우 에러발생할수 있다. -->
		<param name="DatePattern" value="'.'yyyyMMdd"/>
		<!--
			매일 자정에 로그파일을 바꿔주는 명령어
			yyyyMM : 매달 바꿔주는 명령어
			yyyyww : 매주 바꿔주는 명령어
			yyyyMMdd : 매일 자정에 로그파일을 바꿔주는 명령어
			yyyyMMdd a : 자정과, 오후에 로그파일을 바꿔주는 명령어
			그외 매시간, 매분 마다도 가능함.
		-->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{HH:mm:ss.SSS}] - %m%n" />
		</layout>
	</appender>


	
	<!-- Application Loggers -->
	<logger name="com.kh.spring.common.interceptor.LoggingInterceptor">
		<level value="info" />

		<appender-ref ref="console"/>
	</logger>

<!--	<logger name="boardMapper">-->
<!--		<level value="info" />-->
<!--	</logger>-->
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>

	<!-- Root Logger -->
	<root>
		<priority value="info" />
		<appender-ref ref="console" />
		<appender-ref ref="dailyLog"/>
	</root>
	
</log4j:configuration>
